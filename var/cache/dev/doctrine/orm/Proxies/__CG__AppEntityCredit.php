<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Credit extends \App\Entity\Credit implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
  'updatedAt' => NULL,
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
  'updatedAt' => NULL,
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {
        unset($this->updatedAt);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (\array_key_exists($name, self::$lazyPropertiesNames)) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'mensualites', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'nombresMensualites', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'montantEmprunte', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'tauxFixe', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'montantTotal', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'users', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'imageName', 'updatedAt', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'commande', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'creditCategory'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'id', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'mensualites', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'nombresMensualites', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'montantEmprunte', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'tauxFixe', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'montantTotal', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'users', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'imageFile', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'imageName', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'commande', '' . "\0" . 'App\\Entity\\Credit' . "\0" . 'creditCategory'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Credit $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->updatedAt);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getMensualites(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMensualites', []);

        return parent::getMensualites();
    }

    /**
     * {@inheritDoc}
     */
    public function setMensualites(float $mensualites): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMensualites', [$mensualites]);

        return parent::setMensualites($mensualites);
    }

    /**
     * {@inheritDoc}
     */
    public function getNombresMensualites(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNombresMensualites', []);

        return parent::getNombresMensualites();
    }

    /**
     * {@inheritDoc}
     */
    public function setNombresMensualites(int $nombresMensualites): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNombresMensualites', [$nombresMensualites]);

        return parent::setNombresMensualites($nombresMensualites);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontantEmprunte(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontantEmprunte', []);

        return parent::getMontantEmprunte();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontantEmprunte(int $montantEmprunte): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontantEmprunte', [$montantEmprunte]);

        return parent::setMontantEmprunte($montantEmprunte);
    }

    /**
     * {@inheritDoc}
     */
    public function getTauxFixe(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTauxFixe', []);

        return parent::getTauxFixe();
    }

    /**
     * {@inheritDoc}
     */
    public function setTauxFixe(float $tauxFixe): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTauxFixe', [$tauxFixe]);

        return parent::setTauxFixe($tauxFixe);
    }

    /**
     * {@inheritDoc}
     */
    public function getMontantTotal(): ?float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMontantTotal', []);

        return parent::getMontantTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setMontantTotal(float $montantTotal): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMontantTotal', [$montantTotal]);

        return parent::setMontantTotal($montantTotal);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\App\Entity\User $user): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', [$user]);

        return parent::addUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\App\Entity\User $user): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', [$user]);

        return parent::removeUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function setImageFile(\Symfony\Component\HttpFoundation\File\File $imageFile = NULL): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageFile', [$imageFile]);

        parent::setImageFile($imageFile);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageFile(): ?\Symfony\Component\HttpFoundation\File\File
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageFile', []);

        return parent::getImageFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageName(?string $imageName): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageName', [$imageName]);

        parent::setImageName($imageName);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageName', []);

        return parent::getImageName();
    }

    /**
     * {@inheritDoc}
     */
    public function getCommande(): ?\App\Entity\Commande
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCommande', []);

        return parent::getCommande();
    }

    /**
     * {@inheritDoc}
     */
    public function setCommande(\App\Entity\Commande $commande): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCommande', [$commande]);

        return parent::setCommande($commande);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreditCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreditCategory', []);

        return parent::getCreditCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreditCategory(?\App\Entity\Category $creditCategory): \App\Entity\Credit
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreditCategory', [$creditCategory]);

        return parent::setCreditCategory($creditCategory);
    }

}
